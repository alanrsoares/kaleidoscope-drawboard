{"version":3,"sources":["colors.ts","index.tsx"],"names":["hslGenerator","constructor","hueLength","options","lightness","saturation","hueIncrement","cache","this","Math","sqrt","withHue","nextHueIncrement","getColor","y","x","cacheKey","join","hue","floor","hslColor","DEFAULT_STATE","strokeWidth","Number","localStorage","getItem","symmetry","Controls","props","useDisclosure","isOpen","onToggle","useState","state","setState","Box","position","top","bottom","undefined","left","right","pt","background","onClick","Stack","p","color","fontWeight","fontSize","as","Input","type","min","max","step","defaultValue","String","onChange","target","value","onStrokeWidthChange","onSymmetryChange","isInline","spacing","Button","variantColor","onSave","onReset","borderRadius","height","width","padding","size","aria-label","e","preventDefault","App","Component","colorRange","drawingLocked","p5","setup","createCanvas","windowWidth","windowHeight","angleMode","DEGREES","colorMode","HSL","draw","mouseX","mouseY","pmouseX","pmouseY","translate","mx","my","pmx","pmy","mouseIsPressed","i","rotate","angle","stroke","strokeWeight","line","push","scale","pop","render","setItem","saveCanvas","rootElement","document","getElementById","ThemeProvider","CSSReset"],"mappings":"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","file":"static/js/main.bb732337.chunk.js","sourcesContent":["class HSLGenerator {\n  hueIncrement: number;\n  saturation: number;\n  lightness: number;\n  cache: Record<string, string> = {};\n\n  constructor(hueLength = 100, options = { lightness: 0.6, saturation: 1 }) {\n    this.hueIncrement = 360 / Math.sqrt(hueLength ** 2 * 2);\n    this.saturation = options.saturation * 100;\n    this.lightness = options.lightness * 100;\n    this.cache = {};\n  }\n\n  public withHue(hueLength: number) {\n    const nextHueIncrement = 360 / Math.sqrt(hueLength ** 2 * 2);\n\n    if (nextHueIncrement !== this.hueIncrement) {\n      this.cache = {};\n    }\n\n    this.hueIncrement = nextHueIncrement;\n\n    return this;\n  }\n\n  public getColor(y: number, x: number) {\n    const cacheKey = [y, x].join(\"-\");\n\n    if (cacheKey in this.cache) {\n      return this.cache[cacheKey];\n    }\n\n    const hue = Math.floor(Math.sqrt(y ** 2 + x ** 2) * this.hueIncrement);\n    const hslColor = `hsl(${hue},${this.saturation}%,${this.lightness}%)`;\n\n    this.cache[cacheKey] = hslColor;\n\n    return hslColor;\n  }\n}\n\nconst hslGenerator = new HSLGenerator();\n\nexport const getRainbowHSL = (y: number, x: number, hueLength?: number) => {\n  return hueLength\n    ? hslGenerator.withHue(hueLength).getColor(y, x)\n    : hslGenerator.getColor(y, x);\n};\n","import React, { ChangeEvent, Component, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport {\n  Box,\n  Button,\n  CSSReset,\n  Input,\n  Stack,\n  ThemeProvider,\n  useDisclosure,\n} from \"@chakra-ui/core\";\nimport Sketch from \"react-p5\";\nimport IP5 from \"p5\";\nimport { FaCog } from \"react-icons/fa\";\n\nimport { getRainbowHSL } from \"./colors\";\nimport \"./styles.css\";\n\nconst DEFAULT_STATE = {\n  strokeWidth: Number(localStorage.getItem(\"strokeWidth\") || 2),\n  symmetry: Number(localStorage.getItem(\"symmetry\") || 12),\n};\n\nconst Controls: React.FC<{\n  onSymmetryChange(value: number): void;\n  onStrokeWidthChange(value: number): void;\n  onToggle(): void;\n  onReset(): void;\n  onSave(): void;\n}> = (props) => {\n  const { isOpen, onToggle } = useDisclosure();\n  const [state, setState] = useState(DEFAULT_STATE);\n\n  return (\n    <Box\n      position=\"absolute\"\n      top={0}\n      bottom={isOpen ? 0 : undefined}\n      left={0}\n      right={0}\n      pt={isOpen ? 4 : undefined}\n      background=\"rgba(0,0,0,0.6)\"\n      onClick={() => {\n        if (isOpen) {\n          onToggle();\n          props.onToggle();\n        }\n      }}\n    >\n      {isOpen && (\n        <Stack p={3} color=\"white\" fontWeight=\"500\" fontSize=\"1.25rem\">\n          <Box as=\"label\">\n            Stroke Width ({state.strokeWidth})\n            <Input\n              type=\"range\"\n              min={1}\n              max={24}\n              step={1}\n              defaultValue={String(state.strokeWidth)}\n              onChange={(x: React.ChangeEvent<any>) => {\n                const strokeWidth = Number(x.target.value);\n                setState({ ...state, strokeWidth });\n                props.onStrokeWidthChange(strokeWidth);\n              }}\n            />\n          </Box>\n          <Box as=\"label\">\n            Symmetry ({state.symmetry})\n            <Input\n              type=\"range\"\n              min={2}\n              step={2}\n              max={48}\n              defaultValue={String(state.symmetry)}\n              onChange={(x: ChangeEvent<any>) => {\n                const symmetry = Number(x.target.value);\n                setState({ ...state, symmetry });\n                props.onSymmetryChange(symmetry);\n              }}\n            />\n          </Box>\n          <Stack isInline spacing={2}>\n            <Button variantColor=\"green\" onClick={props.onSave}>\n              Save\n            </Button>\n            <Button variantColor=\"blue\" onClick={props.onReset}>\n              Start over\n            </Button>\n          </Stack>\n        </Stack>\n      )}\n      <Button\n        borderRadius=\"50%\"\n        position=\"absolute\"\n        height={10}\n        width={10}\n        padding={0}\n        size=\"sm\"\n        right={2}\n        top={2}\n        aria-label=\"toggle controls\"\n        onClick={(e) => {\n          e.preventDefault();\n          props.onToggle();\n          onToggle();\n        }}\n      >\n        <FaCog fontSize=\"1.5rem\" />\n      </Button>\n    </Box>\n  );\n};\n\nclass App extends Component {\n  symmetry = DEFAULT_STATE.symmetry;\n  strokeWidth = DEFAULT_STATE.strokeWidth;\n\n  colorRange = 0;\n  drawingLocked = false;\n  p5?: IP5 = undefined;\n\n  get angle() {\n    return 360 / this.symmetry;\n  }\n\n  setup = (p5: IP5) => {\n    this.p5 = p5;\n    p5.createCanvas(p5.windowWidth, p5.windowHeight);\n    p5.angleMode(p5.DEGREES);\n    p5.background(0);\n    p5.colorMode(p5.HSL);\n\n    this.colorRange = (p5.width * p5.height) / (p5.width + p5.height);\n  };\n\n  draw = (p5: IP5) => {\n    if (this.drawingLocked) return;\n\n    const { width, height, mouseX, mouseY, pmouseX, pmouseY } = p5;\n\n    p5.translate(width / 2, height / 2);\n\n    if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n      const mx = mouseX - width / 2;\n      const my = mouseY - height / 2;\n      const pmx = pmouseX - width / 2;\n      const pmy = pmouseY - height / 2;\n\n      if (p5.mouseIsPressed) {\n        const color = getRainbowHSL(mouseY, mouseX, this.colorRange * 2);\n\n        for (let i = 0; i < this.symmetry; i++) {\n          p5.rotate(this.angle);\n          p5.stroke(color);\n          p5.strokeWeight(this.strokeWidth);\n          p5.line(mx, my, pmx, pmy);\n          p5.push();\n          p5.scale(1, -1);\n          p5.line(mx, my, pmx, pmy);\n          p5.pop();\n        }\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Controls\n          onStrokeWidthChange={(x) => {\n            localStorage.setItem(\"strokeWidth\", String(x));\n            this.strokeWidth = x;\n          }}\n          onSymmetryChange={(x) => {\n            localStorage.setItem(\"symmetry\", String(x));\n            this.symmetry = x;\n          }}\n          onToggle={() => {\n            this.drawingLocked = !this.drawingLocked;\n          }}\n          onReset={() => {\n            this.p5?.background(0);\n          }}\n          onSave={() => {\n            this.p5?.saveCanvas(\"kaleidoscopic-wunderbar\", \"png\");\n          }}\n        />\n        <Sketch setup={this.setup} draw={this.draw} />\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\n\nrender(\n  <ThemeProvider>\n    <CSSReset />\n    <App />\n  </ThemeProvider>,\n  rootElement\n);\n"],"sourceRoot":""}